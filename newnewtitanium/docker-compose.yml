version: "2.1"
services:
  jellyfin:
    image: jellyfin/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - JELLYFIN_PublishedServerUrl=100.125.70.69
      - JELLYFIN_DATA_DIR=/config/data
      - JELLYFIN_CONFIG_DIR=/config
      - JELLYFIN_LOG_DIR=/config/log
      - JELLYFIN_CACHE_DIR=/config/cache
    volumes:
      - /bigpool/containers/jellyfin:/config
      - /bigpool/Media/TV:/data/tvshows
      - /bigpool/Media/Movies:/data/movies
    ports:
      - 8097:8096
      - 8921:8920 #HTTPS
      - 7350:7359/udp #optional
      - 1902:1900/udp #optional
    devices:
      - /dev/dri:/dev/dri #intel
    restart: unless-stopped

  jellyfin1:
    image: jellyfin/jellyfin:latest
    container_name: jellyfin1
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - JELLYFIN_PublishedServerUrl=100.125.70.69
      - JELLYFIN_DATA_DIR=/config/data
      - JELLYFIN_CONFIG_DIR=/config
      - JELLYFIN_LOG_DIR=/config/log
      - JELLYFIN_CACHE_DIR=/config/cache
    volumes:
      - /bigpool/containers/jellyfin1:/config
      - /bigpool/Media/TV:/data/tvshows
      - /bigpool/Media/Movies:/data/movies
    ports:
      - 8096:8096
      - 8920:8920 #HTTPS
      - 7359:7359/udp #optional
      - 1900:1900/udp #optional
    devices:
      - /dev/dri:/dev/dri #intel
    restart: unless-stopped

  requestrr:
    image: thomst08/requestrr
    container_name: requestrr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - /bigpool/containers/requestrr/config:/root/config
    ports:
      - 4545:4545
    restart: unless-stopped

  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
      - PLEX_CLAIM=claim-Yzqx3dZi-zPcsHA4Yz3y #optional
    volumes:
      - /bigpool/containers/plex:/config
      - /bigpool/Media/TV:/tv
      - /bigpool/Media/Movies:/movies
    restart: unless-stopped
  
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - UMASK_SET=022
    volumes:
      - /bigpool/containers/sonarr:/config
      - /bigpool/Media:/media
    ports:
      - 8989:8989
    restart: unless-stopped

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - UMASK_SET=022 #optional
    volumes:
      - /bigpool/containers/radarr:/config
      - /bigpool/Media:/media
    ports:
      - 7878:7878
    restart: unless-stopped
  
  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - UMASK_SET=022
    volumes:
      - /bigpool/containers/sabnzbd:/config
      - /bigpool/Media/DL:/media/DL
    ports:
      - 8082:8080
    restart: unless-stopped
  
  nginx-proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: nginx-proxy-manager
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - /bigpool/containers/nginx-proxy-manager/data:/data
      - /bigpool/containers/nginx-proxy-manager/letsencrypt:/etc/letsencrypt

  netdata:
    image: netdata/netdata
    container_name: netdata
    pid: host
    network_mode: host
    restart: unless-stopped
    cap_add:
      - SYS_PTRACE
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    volumes:
      - netdataconfig:/etc/netdata
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /etc/localtime:/etc/localtime:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /var/log:/host/var/log:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

  scrutiny:
    container_name: scrutiny
    image: ghcr.io/analogj/scrutiny:master-omnibus
    restart: unless-stopped
    cap_add:
      - SYS_RAWIO
      - SYS_ADMIN
    ports:
      - "8083:8080" # webapp
      - "8086:8086" # influxDB admin
    volumes:
      - /run/udev:/run/udev:ro
      - /bigpool/containers/scrutiny/config:/opt/scrutiny/config
      - /bigpool/containers/scrutiny/influxdb:/opt/scrutiny/influxdb
    devices:
      - "/dev/sda"
      - "/dev/sdb"
      - "/dev/sdc"
      - "/dev/sdd"
      - "/dev/sde"
      - "/dev/sdf"
      - "/dev/sdg"
      - "/dev/sdh"
      - "/dev/nvme0"
      - "/dev/nvme1"
      - "/dev/nvme2"
      - "/dev/nvme3"
  
  smartctl-exporter:
    image: prometheuscommunity/smartctl-exporter
    container_name: smartctl-exporter
    privileged: true
    user: root
    ports:
      - "9633:9633"
  
  mongodb:
    image: mongo
    container_name: mongodb
    restart: unless-stopped
    volumes:
      - /bigpool/containers/mongodb:/data/db
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://root:password@100.125.70.69:27017/

  cribl-master:
    image: cribl/cribl:latest
    environment:
      - CRIBL_DIST_MODE=master
      - CRIBL_DIST_MASTER_URL=tcp://criblmaster@0.0.0.0:4200
      - CRIBL_VOLUME_DIR=/opt/cribl/config-volume
    ports:
      - "19000:9000"
    volumes:
      - "/bigpool/containers/cribl:/opt/cribl/config-volume"
  cribl-workers:
    image: cribl/cribl:latest
    depends_on: 
      - cribl-master
    environment:
      - CRIBL_DIST_MODE=worker
      - CRIBL_DIST_MASTER_URL=tcp://criblmaster@master:4200
    ports:
      - 9000

volumes:
  netdataconfig:
  netdatalib:
  netdatacache:
